{
	"name": "test-textsummary",
	"properties": {
		"folder": {
			"name": "OpenAI-test"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SampleSpark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "f099c28c-685c-40b0-9e20-d9918d0cfa5e"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/3c321efc-9b78-45cd-ab39-1378151cbd42/resourceGroups/test-synapse-analytics/providers/Microsoft.Synapse/workspaces/synapsewsp01/bigDataPools/SampleSpark",
				"name": "SampleSpark",
				"type": "Spark",
				"endpoint": "https://synapsewsp01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SampleSpark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"pip install transformers"
				],
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import openai\r\n",
					"import re\r\n",
					"import requests\r\n",
					"import sys\r\n",
					"from num2words import num2words\r\n",
					"import os\r\n",
					"import pandas as pd\r\n",
					"import numpy as np\r\n",
					"from openai.embeddings_utils import get_embedding, cosine_similarity\r\n",
					"from transformers import GPT2TokenizerFast"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"API_KEY = os.getenv(\"9c6e85674a6d4a389b12a6ca73801091\") \r\n",
					"RESOURCE_ENDPOINT = os.getenv(\"https://test-textsummary.openai.azure.com/\") \r\n",
					"\r\n",
					"openai.api_type = \"azure\"\r\n",
					"openai.api_key = API_KEY\r\n",
					"openai.api_base = RESOURCE_ENDPOINT\r\n",
					"openai.api_version = \"2022-12-01\"\r\n",
					"\r\n",
					"#url = openai.api_base + \"/openai/deployments?api-version=2022-12-01\"\r\n",
					"url = \"https://test-textsummary.openai.azure.com/openai/deployments?api-version=2022-12-01\"\r\n",
					"\r\n",
					"r = requests.get(url, headers={\"api-key\": API_KEY})\r\n",
					"\r\n",
					"print(r.text)"
				],
				"execution_count": 26
			}
		]
	}
}